AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS

  Sample SAM Template for AWS


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Parameters:
  DBEndpoint:
    Type: String
    Description: "Database endpoint"
  DBName:
    Type: String
    Description: "Database name"
  DBUsername:
    Type: String
    Description: "Username for database access"
  DBPassword:
    Type: String
    Description: "Password for database access"

Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        DB_HOST: !Ref DBEndpoint
        DB_PASSWORD: !Ref DBPassword
        DB_USER: !Ref DBUsername
        DB_NAME: !Ref DBName
    VpcConfig:
      SecurityGroupIds:
        - sg-7b3fd503
      SubnetIds:
        - subnet-3707865d
        - subnet-5e915312

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get

  GetReceivingFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: receiving_handler/
      Handler: handler.getReceiving
      Runtime: python3.6
      Events:
        GetReceiving:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /receivings/{id}
            Method: get

  CreateReceivingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: receiving_handler/
      Handler: handler.createReceiving
      Runtime: python3.6
      Events:
        CreateReceiving:
          Type: Api
          Properties:
            Path: /receivings
            Method: post

  CreateReceivingPosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: receiving_handler/
      Handler: handler.createReceivingPos
      Runtime: python3.6
      Events:
        CreateReceivingPos:
          Type: Api
          Properties:
            Path: /receivings/pos
            Method: post


  GetAllReceivingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: receiving_handler/
      Handler: handler.get_allReceiving
      Runtime: python3.6
      Events:
        GetAllReceiving:
          Type: Api
          Properties:
            Path: /receivings
            Method: get

  GetOrderFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: receiving_handler/
      Handler: handler.getOrder
      Runtime: python3.6
      Events:
        GetOrder:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /orders/{id}
            Method: get


  CreateOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: receiving_handler/
      Handler: handler.createOrder
      Runtime: python3.6
      Events:
        CreateOrder:
          Type: Api
          Properties:
            Path: /orders
            Method: post


  CreateOrderPosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: receiving_handler/
      Handler: handler.createOrderPos
      Runtime: python3.6
      Events:
        CreateOrderPos:
          Type: Api
          Properties:
            Path: /orders/pos
            Method: post


  GetAllOrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: receiving_handler/
      Handler: handler.get_allOrders
      Runtime: python3.6
      Events:
        GetAllOrders:
          Type: Api
          Properties:
            Path: /orders
            Method: get


  GetChargeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: receiving_handler/
      Handler: handler.getCharge
      Runtime: python3.6
      Events:
        GetCharge:
          Type: Api
          Properties:
            Path: /charges/{id}
            Method: get


  CreateChargeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: receiving_handler/
      Handler: handler.createCharge
      Runtime: python3.6
      Events:
        CreateCharge:
          Type: Api
          Properties:
            Path: /charges
            Method: post


  GetInventoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stock_handler/
      Handler: handler.getInventory
      Runtime: python3.6
      Events:
        GetInventory:
          Type: Api
          Properties:
            Path: /inventory
            Method: get

  BookMaterialToStock:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stock_handler/
      Handler: handler.bookMaterial
      Runtime: python3.6
      Events:
        BookMaterialToStock:
          Type: Api
          Properties:
            Path: /stock/material
            Method: post

  BookProductToStock:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stock_handler/
      Handler: handler.bookProductToStock
      Runtime: python3.6
      Events:
        BookProductToStock:
          Type: Api
          Properties:
            Path: /stock/product
            Method: post


  BookProductFromStock:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stock_handler/
      Handler: handler.bookProductFromStock
      Runtime: python3.6
      Events:
        BookProductToStock:
          Type: Api
          Properties:
            Path: /stock/product
            Method: delete


  GetPackageListFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stock_handler/
      Handler: handler.getPackageList
      Runtime: python3.6
      Events:
        GetPackageList:
          Type: Api
          Properties:
            Path: /goods/orders
            Method: get


  CreateGoodsOrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stock_handler/
      Handler: handler.createGoodsOrders
      Runtime: python3.6
      Events:
        CreateGoodsOrders:
          Type: Api
          Properties:
            Path: /goods/orders
            Method: post

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
